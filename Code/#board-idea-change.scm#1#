#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.2 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 28 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 15 #"test-case-box%\0"
2 0 1 6 #"wxloc\0"
          0 0 57 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 10 #"Monospace\0"
0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 37
#"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1 0
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1 0 1
#"\0"
0 75 10 #"Monospace\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1           0 2590 0 17 3 18 #";ll classes define"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"#lang racket"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"include"
0 0 4 3 1 #" "
0 0 19 3 16 #"\"hole-class.scm\""
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"include"
0 0 4 3 1 #" "
0 0 19 3 16 #"\"ball-class.scm\""
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"include"
0 0 4 3 1 #" "
0 0 19 3 17 #"\"board-class.scm\""
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"include"
0 0 4 3 1 #" "
0 0 19 3 20 #"\"ball-set-class.scm\""
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"include"
0 0 4 3 1 #" "
0 0 19 3 15 #"\"functions.scm\""
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 17 3 28 #";(include \"image-making.ss\")"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"struct"
0 0 4 3 1 #" "
0 0 14 3 4 #"tree"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"moves"
0 0 4 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 14 #"#:transparent)"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"struct"
0 0 4 3 1 #" "
0 0 14 3 8 #"tree_end"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"moves"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 14 #"#:transparent)"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"struct"
0 0 4 3 1 #" "
0 0 14 3 5 #"move_"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"from"
0 0 4 3 1 #" "
0 0 14 3 2 #"to"
0 0 4 3 1 #" "
0 0 14 3 3 #"val"
0 0 4 3 1 #" "
0 0 14 3 6 #"player"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 14 #"#:transparent)"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"struct"
0 0 4 3 1 #" "
0 0 14 3 10 #"move-start"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"player"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 14 #"#:transparent)"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"make-vector-2d"
0 0 4 3 1 #" "
0 0 14 3 1 #"r"
0 0 4 3 1 #" "
0 0 14 3 1 #"c"
0 0 4 3 1 #" "
0 0 14 3 7 #"initial"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 12 #"build-vector"
0 0 4 3 1 #" "
0 0 14 3 1 #"r"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 22 3 1 #"("
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 11 #"make-vector"
0 0 4 3 1 #" "
0 0 14 3 1 #"c"
0 0 4 3 1 #" "
0 0 14 3 7 #"initial"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"2d-vector-ref"
0 0 4 3 1 #" "
0 0 14 3 3 #"vec"
0 0 4 3 1 #" "
0 0 14 3 1 #"r"
0 0 4 3 1 #" "
0 0 14 3 1 #"c"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 10 #"vector-ref"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 10 #"vector-ref"
0 0 4 3 1 #" "
0 0 14 3 3 #"vec"
0 0 4 3 1 #" "
0 0 14 3 1 #"r"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 1 #"c"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"2d-vector-set!"
0 0 4 3 2 #"  "
0 0 14 3 3 #"vec"
0 0 4 3 1 #" "
0 0 14 3 1 #"r"
0 0 4 3 1 #" "
0 0 14 3 1 #"c"
0 0 4 3 1 #" "
0 0 14 3 5 #"value"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 11 #"vector-set!"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"vector-ref"
0 0 4 3 2 #"  "
0 0 14 3 3 #"vec"
0 0 4 3 1 #" "
0 0 14 3 1 #"r"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 1 #"c"
0 0 4 3 2 #"  "
0 0 14 3 5 #"value"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"build-2d-vector"
0 0 4 3 1 #" "
0 0 14 3 1 #"r"
0 0 4 3 1 #" "
0 0 14 3 1 #"c"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 12 #"build-vector"
0 0 4 3 1 #" "
0 0 14 3 1 #"r"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 22 3 1 #"("
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"build-vector"
0 0 4 3 1 #" "
0 0 14 3 1 #"c"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 22 3 1 #"("
0 0 14 3 1 #"y"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 6 #"))))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 38 #";(struct move (from to) #:transparent)"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 9 #"cur-board"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"new"
0 0 4 3 1 #" "
0 0 14 3 6 #"board%"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 9 #"all-balls"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"make-vector"
0 0 4 3 1 #" "
0 0 20 3 1 #"6"
0 0 4 3 1 #" "
0 0 20 3 3 #"#\\ "
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 11 #"vector-set!"
0 0 4 3 1 #" "
0 0 14 3 9 #"all-balls"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"new"
0 0 4 3 1 #" "
0 0 14 3 9 #"ball-set%"
0 0 4 3 1 #" "
0 0 22 3 1 #"["
0 0 14 3 3 #"col"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 22 3 3 #"]))"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 11 #"vector-set!"
0 0 4 3 1 #" "
0 0 14 3 9 #"all-balls"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"new"
0 0 4 3 1 #" "
0 0 14 3 9 #"ball-set%"
0 0 4 3 1 #" "
0 0 22 3 1 #"["
0 0 14 3 3 #"col"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 22 3 3 #"]))"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 11 #"vector-set!"
0 0 4 3 1 #" "
0 0 14 3 9 #"all-balls"
0 0 4 3 1 #" "
0 0 20 3 1 #"2"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"new"
0 0 4 3 1 #" "
0 0 14 3 9 #"ball-set%"
0 0 4 3 1 #" "
0 0 22 3 1 #"["
0 0 14 3 3 #"col"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"black"
0 0 22 3 3 #"]))"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 11 #"vector-set!"
0 0 4 3 1 #" "
0 0 14 3 9 #"all-balls"
0 0 4 3 1 #" "
0 0 20 3 1 #"3"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"new"
0 0 4 3 1 #" "
0 0 14 3 9 #"ball-set%"
0 0 4 3 1 #" "
0 0 22 3 1 #"["
0 0 14 3 3 #"col"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 22 3 3 #"]))"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 11 #"vector-set!"
0 0 4 3 1 #" "
0 0 14 3 9 #"all-balls"
0 0 4 3 1 #" "
0 0 20 3 1 #"4"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"new"
0 0 4 3 1 #" "
0 0 14 3 9 #"ball-set%"
0 0 4 3 1 #" "
0 0 22 3 1 #"["
0 0 14 3 3 #"col"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"orange"
0 0 22 3 3 #"]))"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 11 #"vector-set!"
0 0 4 3 1 #" "
0 0 14 3 9 #"all-balls"
0 0 4 3 1 #" "
0 0 20 3 1 #"5"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"new"
0 0 4 3 1 #" "
0 0 14 3 9 #"ball-set%"
0 0 4 3 1 #" "
0 0 22 3 1 #"["
0 0 14 3 3 #"col"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 3 #"]))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 94
(
 #";(define (board-evaluation board color);;this function does is gets "
 #"the best move which makes "
) 0 0 4 29 1 #"\n"
0 0 17 3 93
(
 #";  (let ([ind (color->index color)])    ;;;the board profitable amon"
 #"g all moves in one chance"
) 0 0 4 29 1 #"\n"
0 0 17 3 34 #";    (define (helper curr-ind max)"
0 0 4 29 1 #"\n"
0 0 17 3 48 #";       (let([res (evaluate-board-at curr-ind)])"
0 0 4 29 1 #"\n"
0 0 17 3 97
(
 #";         (if(> (caddr res) (caddr max))  (if(= curr-ind 9) curr-ind"
 #" (helper (+ 1 curr-ind) res))"
) 0 0 4 29 1 #"\n"
0 0 17 3 68
#";              (if(= curr-ind 9) max (helper (+ 1 curr-ind) max)))))"
0 0 4 29 1 #"\n"
0 0 17 3 3 #";  "
0 0 4 29 1 #"\n"
0 0 17 3 9 #";        "
0 0 4 29 1 #"\n"
0 0 17 3 46 #";    (define balls (vector-ref all-balls ind))"
0 0 4 29 1 #"\n"
0 0 17 3 4 #";   "
0 0 4 29 1 #"\n"
0 0 17 3 38 #";    (define (evaluate-board-at index)"
0 0 4 29 1 #"\n"
0 0 17 3 45 #";      (let* ([b (send balls get-ball index)]"
0 0 4 29 1 #"\n"
0 0 17 3 41 #";             [bindex (send b get-index)]"
0 0 4 29 1 #"\n"
0 0 17 3 45 #";             [l (send b get-possible-index)]"
0 0 4 29 1 #"\n"
0 0 17 3 92
(
 #";             [l1 (map (lambda (x) (list bindex (car x) (get-distanc"
 #"e bindex (car x)))) l)])"
) 0 0 4 29 1 #"\n"
0 0 17 3 23 #";        (helper2 l1)))"
0 0 4 29 1 #"\n"
0 0 17 3 5 #";    "
0 0 4 29 1 #"\n"
0 0 17 3 26 #";     (define (helper2 l1)"
0 0 4 29 1 #"\n"
0 0 17 3 66
#";      (foldr (lambda(x res) (if (> (caddr x) (caddr res)) x res))"
0 0 4 29 1 #"\n"
0 0 17 3 30 #";             (list '() '() 0)"
0 0 4 29 1 #"\n"
0 0 17 3 21 #";                l1))"
0 0 4 29 1 #"\n"
0 0 17 3 7 #";      "
0 0 4 29 1 #"\n"
0 0 17 3 8 #";       "
0 0 4 29 1 #"\n"
0 0 17 3 5 #";    "
0 0 4 29 1 #"\n"
0 0 17 3 35 #";    (define (get-distance from to)"
0 0 4 29 1 #"\n"
0 0 17 3 31 #";      (let ([ifrom (car from)]"
0 0 4 29 1 #"\n"
0 0 17 3 31 #";            [jfrom (cdr from)]"
0 0 4 29 1 #"\n"
0 0 17 3 29 #";            [ito   (car to)]"
0 0 4 29 1 #"\n"
0 0 17 3 30 #";            [jto   (cdr to)])"
0 0 4 29 1 #"\n"
0 0 17 3 83
(
 #";        (+  (* ( - ito ifrom) ( - ito ifrom)) (* ( - jto jfrom) ( -"
 #" jto jfrom)))))"
) 0 0 4 29 1 #"\n"
0 0 17 3 9 #";        "
0 0 4 29 1 #"\n"
0 0 17 3 35 #";    (helper 0 (list '() '() -1))))"
0 0 4 29 1 #"\n"
0 0 17 3 1 #";"
0 0 4 29 1 #"\n"
0 0 17 3 37 #";(board-evaluation cur-board 'yellow)"
0 0 4 29 1 #"\n"
0 0 17 3 7 #";      "
0 0 4 29 1 #"\n"
0 0 17 3 5 #";    "
0 0 4 29 1 #"\n"
0 0 17 3 32 #";(send (vector-ref all-balls 0) "
0 0 4 29 1 #"\n"
0 0 17 3 38 #";     generate-all-moves-for-the-set) "
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 3 #";  "
0 0 4 29 1 #"\n"
0 0 17 3 49 #";(define comp-player (new ball-set% [col 'blue]))"
0 0 4 29 1 #"\n"
0 0 17 3 54 #";(define human-player (new ball-set% [col 'orange]))  "
0 0 4 29 1 #"\n"
0 0 17 3 3 #";  "
0 0 4 29 1 #"\n"
0 0 17 3 3 #";  "
0 0 4 29 1 #"\n"
0 0 17 3 92
(
 #";(define l1   (vector-ref (send (vector-ref all-balls 0) generate-al"
 #"l-moves-for-the-set) 0))"
) 0 0 4 29 1 #"\n"
0 0 17 3 1 #";"
0 0 4 29 1 #"\n"
0 0 17 3 1 #";"
0 0 4 29 1 #"\n"
0 0 17 3 48 #";;;;;Artificial Intelligence Implemenation;;;;;;"
0 0 4 29 1 #"\n"
0 0 17 3 1 #";"
0 0 4 29 1 #"\n"
0 0 17 3 27 #";(define (vector-assq v1 m)"
0 0 4 29 1 #"\n"
0 0 17 3 33 #";  (let ([le (vector-length v1)])"
0 0 4 29 1 #"\n"
0 0 17 3 21 #";  (define (helper i)"
0 0 4 29 1 #"\n"
0 0 17 3 67
#";    (cond [(equal? (car (vector-ref  v1 i)) m) (vector-ref  v1 i)]"
0 0 4 29 1 #"\n"
0 0 17 3 24 #";          [(= le i) #f]"
0 0 4 29 1 #"\n"
0 0 17 3 36 #";          [else (helper (+ i 1))]))"
0 0 4 29 1 #"\n"
0 0 17 3 17 #";    (helper 0)))"
0 0 4 29 1 #"\n"
0 0 17 3 5 #";    "
0 0 4 29 1 #"\n"
0 0 17 3 99
(
 #";(define (search-ball ind player);;;returns the ball along with its "
 #"current index (cons index ball)"
) 0 0 4 29 1 #"\n"
0 0 17 3 48 #";  (let* ([ball-vec (send player get-all-balls)]"
0 0 4 29 1 #"\n"
0 0 17 3 87
(
 #";         [all-indexes (vector-map (lambda (x) (cons (send x get-ind"
 #"ex) x)) ball-vec)])"
) 0 0 4 29 1 #"\n"
0 0 17 3 105
(
 #";    (cond [(equal? #f (vector-assq all-indexes ind)) (error \"The b"
 #"all does not exist at that location\")]"
) 0 0 4 29 1 #"\n"
0 0 17 3 50 #";          [else (vector-assq all-indexes ind)])))"
0 0 4 29 1 #"\n"
0 0 17 3 1 #";"
0 0 4 29 1 #"\n"
0 0 17 3 30 #";(define (do-move move player)"
0 0 4 29 1 #"\n"
0 0 17 3 41 #";  (let* ([color (send player get-color)]"
0 0 4 29 1 #"\n"
0 0 17 3 34 #";         [from (move_-from move)]"
0 0 4 29 1 #"\n"
0 0 17 3 33 #";         [rate (move_-val move)]"
0 0 4 29 1 #"\n"
0 0 17 3 30 #";         [to (move_-to move)]"
0 0 4 29 1 #"\n"
0 0 17 3 48 #";         [ball (cdr(search-ball from player))])"
0 0 4 29 1 #"\n"
0 0 17 3 11 #";    (begin"
0 0 4 29 1 #"\n"
0 0 17 3 32 #";      (send ball index-set! to)"
0 0 4 29 1 #"\n"
0 0 17 3 46 #";      (let ([ x (evaluate-board-for player)])"
0 0 4 29 1 #"\n"
0 0 17 3 42 #";        (begin(send ball index-set! from)"
0 0 4 29 1 #"\n"
0 0 17 3 37 #";              (move_ from to x))))))"
0 0 4 29 1 #"\n"
0 0 17 3 1 #";"
0 0 4 29 1 #"\n"
0 0 17 3 1 #";"
0 0 4 29 1 #"\n"
0 0 17 3 1 #";"
0 0 4 29 1 #"\n"
0 0 17 3 94
(
 #";;;I am analysing only two moves ahead.is i am only going to predict"
 #" one move of the opponent."
) 0 0 4 29 1 #"\n"
0 0 17 3 1 #";"
0 0 4 29 1 #"\n"
0 0 17 3 1 #";"
0 0 4 29 1 #"\n"
0 0 17 3 39 #";(define (predict-move player1 player2)"
0 0 4 29 1 #"\n"
0 0 17 3 3 #";  "
0 0 4 29 1 #"\n"
0 0 17 3 87
(
 #";   (define e (tree (move_'() '() 0 player1) (generate-all-moves-for"
 #"-the-set player1)))"
) 0 0 4 29 1 #"\n"
0 0 17 3 4 #";   "
0 0 4 29 1 #"\n"
0 0 17 3 32 #";   (define (make-move-opponent)"
0 0 4 29 1 #"\n"
0 0 17 3 38 #";     (let ([y (map (lambda (x) (begin"
0 0 4 29 1 #"\n"
0 0 17 3 57 #";                                 (do-many-move (list x))"
0 0 4 29 1 #"\n"
0 0 17 3 88
(
 #";                                 (let ([z (evaluate-board-for (move"
 #"_-player (list x)))]"
) 0 0 4 29 1 #"\n"
0 0 17 3 86
(
 #";                                       [ y (send generate-all-moves"
 #"-for-set player2)]"
) 0 0 4 29 1 #"\n"
0 0 17 3 61
#";                                       [from (move_-from x)]"
0 0 4 29 1 #"\n"
0 0 17 3 61
#";                                       [from (move_-from x)]"
0 0 4 29 1 #"\n"
0 0 17 3 61
#";                                       [from (move_-from x)]"
0 0 4 29 1 #"\n"
0 0 17 3 62
#";                                       [from (move_-from x)])"
0 0 4 29 1 #"\n"
0 0 17 3 42 #";                                   (begin"
0 0 4 29 1 #"\n"
0 0 17 3 70
(
 #";                                   (undo-many-move (list x)))])))) "
 #"e)"
) 0 0 4 29 1 #"\n"
0 0 17 3 68
#";                                                                   "
0 0 4 29 1 #"\n"
0 0 17 3 36 #";                                   "
0 0 4 29 1 #"\n"
0 0 17 3 52 #";                                    [x-p (car pos)]"
0 0 4 29 1 #"\n"
0 0 17 3 34 #";                                 "
0 0 4 29 1 #"\n"
0 0 17 3 34 #";                                 "
0 0 4 29 1 #"\n"
0 0 17 3 38 #";                                 ))) "
0 0 4 29 1 #"\n"
0 0 17 3 4 #";   "
0 0 4 29 1 #"\n"
0 0 17 3 23 #";   (define (helper2 t)"
0 0 4 29 1 #"\n"
0 0 17 3 62
#";    (if (tree_end? t) (begin (do-many-move (tree_end-move t))"
0 0 4 29 1 #"\n"
0 0 17 3 58
#";                             (let* ([y (tree-end-move t)]"
0 0 4 29 1 #"\n"
0 0 17 3 78
(
 #";                                    [x (evaluate-board-for (move_pl"
 #"ayer y))])"
) 0 0 4 29 1 #"\n"
0 0 17 3 58
#";                               (begin (undo-many-move y) "
0 0 4 29 1 #"\n"
0 0 17 3 134
(
 #";                                      (tree_end (move_-from y) (mov"
 #"e_-to y) x (move_-player y)))))                                  )"
) 0 0 4 29 1 #"\n"
0 0 17 3 32 #";                               "
0 0 4 29 1 #"\n"
0 0 17 3 7 #";     ("
0 0 4 29 1 #"\n"
0 0 17 3 12 #";           "
0 0 4 29 1 #"\n"
0 0 17 3 4 #";   "
0 0 4 29 1 #"\n"
0 0 17 3 4 #";   "
0 0 4 29 1 #"\n"
0 0 17 3 1 #";"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 60
#";(define (undo-many-move move-list) ;;(mlist mov3 mov2 mov1)"
0 0 4 29 1 #"\n"
0 0 17 3 31 #";  (if (null? move-list) (void)"
0 0 4 29 1 #"\n"
0 0 17 3 36 #";      (let* ([move (car move-list)]"
0 0 4 29 1 #"\n"
0 0 17 3 45 #";             [color (send player get-color)]"
0 0 4 29 1 #"\n"
0 0 17 3 47 #";             [to (move_-from (car move-list))]"
0 0 4 29 1 #"\n"
0 0 17 3 48 #";             [rate (move_-val (car move-list))]"
0 0 4 29 1 #"\n"
0 0 17 3 47 #";             [from (move_-to (car move-list))]"
0 0 4 29 1 #"\n"
0 0 17 3 66
#";             [ball (cdr (search-ball from (move_-player move)))])"
0 0 4 29 1 #"\n"
0 0 17 3 15 #";        (begin"
0 0 4 29 1 #"\n"
0 0 17 3 36 #";          (send ball index-set! to)"
0 0 4 29 1 #"\n"
0 0 17 3 47 #";          (undo-many-move (cdr move-list))))))"
0 0 4 29 1 #"\n"
0 0 17 3 1 #";"
0 0 4 29 1 #"\n"
0 0 17 3 1 #";"
0 0 4 29 1 #"\n"
0 0 17 3 58
#";(define (do-many-move move-list);;;(mlist mov3 mov2 mov1)"
0 0 4 29 1 #"\n"
0 0 17 3 25 #";  (define (helper mlist)"
0 0 4 29 1 #"\n"
0 0 17 3 29 #";    (if (null? mlist) (void)"
0 0 4 29 1 #"\n"
0 0 17 3 37 #";        (let*([move (car move-list)]"
0 0 4 29 1 #"\n"
0 0 17 3 45 #";             [color (send player get-color)]"
0 0 4 29 1 #"\n"
0 0 17 3 46 #";             [from (move_-from (car m-list))]"
0 0 4 29 1 #"\n"
0 0 17 3 45 #";             [rate (move_-val (car m-list))]"
0 0 4 29 1 #"\n"
0 0 17 3 42 #";             [to (move_-to (car m-list))]"
0 0 4 29 1 #"\n"
0 0 17 3 66
#";             [ball (cdr (search-ball from (move_-player move)))])"
0 0 4 29 1 #"\n"
0 0 17 3 15 #";        (begin"
0 0 4 29 1 #"\n"
0 0 17 3 36 #";          (send ball index-set! to)"
0 0 4 29 1 #"\n"
0 0 17 3 41 #";          (do-many-move (cdr mlist))))))"
0 0 4 29 1 #"\n"
0 0 17 3 32 #";  (helper (reverse move-list)))"
0 0 4 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 4 29 1 #"\n"
0 0 17 3 3 #";  "
0 0 4 29 1 #"\n"
0 0 17 3 40 #";  (let ([rmlist (reverse (move-list))])"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 45 #";;;;;;;;;Graphics Starts;;;;;;;;;;;;;;;;;;;;;"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"require"
0 0 4 3 1 #" "
0 0 14 3 17 #"graphics/graphics"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 13 #"open-graphics"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 9 #"view-port"
0 0 22 3 1 #"("
0 0 14 3 13 #"open-viewport"
0 0 4 3 1 #" "
0 0 19 3 18 #"\"Chinese Checkers\""
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 4 3 1 #" "
0 0 20 3 1 #"5"
0 0 4 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 3 #"750"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 2 #"(("
0 0 14 3 20 #"draw-solid-rectangle"
0 0 4 3 1 #" "
0 0 14 3 9 #"view-port"
0 0 22 3 1 #")"
0 1 4 65 1 #"\t"
0 0 4 3 1 #" "
0 1 4 65 1 #"\t"
0 0 4 3 1 #" "
0 1 4 65 1 #"\t"
0 0 4 3 1 #" "
0 1 4 65 1 #"\t"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 1 4 65 1 #"\t"
0 0 4 3 1 #" "
0 1 4 65 1 #"\t"
0 0 4 3 1 #" "
0 1 4 65 1 #"\t"
0 0 4 3 1 #" "
0 1 4 65 1 #"\t"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 20 3 4 #"1000"
0 1 4 65 1 #"\t"
0 0 4 3 1 #" "
0 1 4 65 1 #"\t"
0 0 4 3 1 #" "
0 1 4 65 1 #"\t"
0 0 4 3 1 #" "
0 1 4 65 1 #"\t"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 20 3 3 #"750"
0 0 4 3 1 #" "
0 0 19 3 7 #"\"white\""
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 54 #";((draw-pixmap view-port) \"star.png\" (make-posn 0 15))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 36 #";(define (evaluate-board-for player)"
0 0 4 29 1 #"\n"
0 0 17 3 3 #";  "
0 0 4 29 1 #"\n"
0 0 17 3 65
#";  (define (f r-no c-no) ;r-no :  row number ;c-no :column number"
0 0 4 29 1 #"\n"
0 0 17 3 49 #";     (/ (- (* 500 r-no) (abs (- c-no 8))) 1000))"
0 0 4 29 1 #"\n"
0 0 17 3 60
#";  (define balls (vector->list (send player get-all-balls)))"
0 0 4 29 1 #"\n"
0 0 17 3 62
#";  (define (sum l) (foldr (lambda (fst acc) (+ fst acc)) 0 l))"
0 0 4 29 1 #"\n"
0 0 17 3 3 #";  "
0 0 4 29 1 #"\n"
0 0 17 3 51 #";  (cond [(equal? (send player get-color) 'orange) "
0 0 4 29 1 #"\n"
0 0 17 3 63
#";                                               (define bindex "
0 0 4 29 1 #"\n"
0 0 17 3 117
(
 #";                                                 (map (lambda(p) (l"
 #"et([i (send p get-index)]) (f (cdr i) (car i)))) "
) 0 0 4 29 1 #"\n"
0 0 17 3 62
#";                                                      balls))"
0 0 4 29 1 #"\n"
0 0 17 3 61
#";                                               (sum bindex)]"
0 0 4 29 1 #"\n"
0 0 17 3 9 #";        "
0 0 4 29 1 #"\n"
0 0 17 3 49 #";        [(equal? (send player get-color) 'blue) "
0 0 4 29 1 #"\n"
0 0 17 3 63
#";                                               (define bindex "
0 0 4 29 1 #"\n"
0 0 17 3 55 #";                                                 (map "
0 0 4 29 1 #"\n"
0 0 17 3 120
(
 #";                                                  (lambda(p) (let(["
 #"i (send p get-index)]) (f (cdr i) (- 16 (car i))))) "
) 0 0 4 29 1 #"\n"
0 0 17 3 58
#";                                                  balls))"
0 0 4 29 1 #"\n"
0 0 17 3 61
#";                                               (sum bindex)]"
0 0 4 29 1 #"\n"
0 0 17 3 50 #";                                               ))"
0 0 4 29 1 #"\n"
0 0 17 3 60
#"; (send (send comp-player get-ball 3) index-set! (cons 4 5))"
0 0 4 29 1 #"\n"
0 0 17 3 63
#"; ;(send (send comp-player get-ball 4) index-set! (cons 15 13))"
0 0 4 29 1 #"\n"
0 0 17 3 63
#"; ;(send (send comp-player get-ball 5) index-set! (cons 15 12))"
0 0 4 29 1 #"\n"
0 0 17 3 8 #";;;     "
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"change-a-bit"
0 0 4 3 1 #" "
0 0 14 3 1 #"i"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 1 #"i"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"/"
0 0 4 3 1 #" "
0 0 14 3 9 #"rect-size"
0 0 4 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 1 #"i"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"/"
0 0 4 3 1 #" "
0 0 14 3 9 #"rect-size"
0 0 4 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 4 #"))))"
0 0 4 3 5 #"     "
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 14 #"draw-all-holes"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"helper"
0 0 4 3 1 #" "
0 0 14 3 1 #"i"
0 0 4 3 1 #" "
0 0 14 3 1 #"j"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 4 #"let*"
0 0 4 3 1 #" "
0 0 22 3 2 #"(["
0 0 14 3 4 #"hole"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"send"
0 0 4 3 1 #" "
0 0 14 3 9 #"cur-board"
0 0 4 3 1 #" "
0 0 14 3 7 #"get-elm"
0 0 4 3 1 #" "
0 0 14 3 1 #"i"
0 0 4 3 1 #" "
0 0 14 3 1 #"j"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 22 3 1 #"["
0 0 14 3 3 #"pos"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"send"
0 0 4 3 1 #" "
0 0 14 3 4 #"hole"
0 0 4 3 1 #" "
0 0 14 3 12 #"get-position"
0 0 22 3 3 #")])"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 15 3 5 #"begin"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 22 3 2 #"[("
0 0 14 3 6 #"equal?"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 7 #"invalid"
0 0 4 3 1 #" "
0 0 14 3 3 #"pos"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"void"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 13 #"             "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 4 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 11 #"draw-pixmap"
0 0 4 3 1 #" "
0 0 14 3 9 #"view-port"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 19 3 10 #"\"hole.png\""
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"change-a-bit"
0 0 4 3 1 #" "
0 0 14 3 3 #"pos"
0 0 22 3 4 #"))])"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 22 3 2 #"[("
0 0 14 3 3 #"and"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"="
0 0 4 3 1 #" "
0 0 20 3 2 #"16"
0 0 4 3 1 #" "
0 0 14 3 1 #"i"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"="
0 0 4 3 1 #" "
0 0 20 3 2 #"16"
0 0 4 3 1 #" "
0 0 14 3 1 #"j"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"void"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 13 #"             "
0 0 22 3 2 #"[("
0 0 14 3 1 #"="
0 0 4 3 1 #" "
0 0 20 3 2 #"16"
0 0 4 3 1 #" "
0 0 14 3 1 #"j"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"helper"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 14 3 1 #"i"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 13 #"             "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"helper"
0 0 4 3 1 #" "
0 0 14 3 1 #"i"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 14 3 1 #"j"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 7 #"))]))))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 6 #"helper"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"draw-all-balls"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"helper"
0 0 4 3 1 #" "
0 0 14 3 1 #"i"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 4 #"let*"
0 0 4 3 1 #" "
0 0 22 3 2 #"(["
0 0 14 3 4 #"elem"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"vector-ref"
0 0 4 3 1 #" "
0 0 14 3 9 #"all-balls"
0 0 4 3 1 #" "
0 0 14 3 1 #"i"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 22 3 1 #"["
0 0 14 3 5 #"balls"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"vector->list"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"send"
0 0 4 3 1 #" "
0 0 14 3 4 #"elem"
0 0 4 3 1 #" "
0 0 14 3 13 #"get-all-balls"
0 0 22 3 3 #"))]"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 22 3 1 #"["
0 0 14 3 3 #"col"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"send"
0 0 4 3 1 #" "
0 0 14 3 4 #"elem"
0 0 4 3 1 #" "
0 0 14 3 9 #"get-color"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 22 3 1 #"["
0 0 14 3 3 #"png"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"string-append"
0 0 4 29 1 #"\n"
0 0 4 3 17 #"                 "
0 0 22 3 1 #"("
0 0 14 3 14 #"symbol->string"
0 0 4 3 1 #" "
0 0 14 3 3 #"col"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 17 #"                 "
0 0 19 3 6 #"\".png\""
0 0 22 3 3 #")])"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 15 3 5 #"begin"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 5 #"foldr"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 22 3 1 #"("
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 14 3 3 #"res"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 17 #"                 "
0 0 22 3 2 #"(("
0 0 14 3 11 #"draw-pixmap"
0 0 4 3 1 #" "
0 0 14 3 9 #"view-port"
0 0 22 3 1 #")"
0 0 4 3 2 #"  "
0 0 14 3 3 #"png"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"change-a-bit"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"send"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 14 3 12 #"get-position"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 4 #"void"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 14 3 5 #"balls"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 22 3 1 #"("
0 0 14 3 1 #"="
0 0 4 3 1 #" "
0 0 14 3 1 #"i"
0 0 4 3 1 #" "
0 0 20 3 1 #"5"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"void"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"helper"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 14 3 1 #"i"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 6 #"))))))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 6 #"helper"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 17 #"connect-all-holes"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"helper"
0 0 4 3 1 #" "
0 0 14 3 1 #"i"
0 0 4 3 1 #" "
0 0 14 3 1 #"j"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 5 #"begin"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"not"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 7 #"invalid"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"send"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"send"
0 0 4 3 1 #" "
0 0 14 3 9 #"cur-board"
0 0 4 3 1 #" "
0 0 14 3 7 #"get-elm"
0 0 4 3 1 #" "
0 0 14 3 1 #"i"
0 0 4 3 1 #" "
0 0 14 3 1 #"j"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 9 #"get-state"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"("
0 0 15 3 4 #"let*"
0 0 22 3 2 #"(["
0 0 14 3 2 #"x1"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 4 3 1 #" "
0 0 14 3 1 #"i"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 4 3 1 #" "
0 0 14 3 1 #"j"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 3 #"))]"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 22 3 1 #"["
0 0 14 3 2 #"x2"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 4 3 1 #" "
0 0 14 3 1 #"i"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 4 3 2 #"  "
0 0 14 3 1 #"j"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 22 3 1 #"["
0 0 14 3 2 #"x3"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 4 3 2 #"  "
0 0 14 3 1 #"i"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 4 3 1 #" "
0 0 14 3 1 #"j"
0 0 22 3 3 #"))]"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 22 3 1 #"["
0 0 14 3 2 #"x4"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 14 3 1 #"i"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 14 3 1 #"j"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 3 #"))]"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 22 3 1 #"["
0 0 14 3 2 #"x5"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 14 3 1 #"i"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 1 #"j"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 22 3 1 #"["
0 0 14 3 2 #"x6"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 4 3 1 #" "
0 0 14 3 1 #"i"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 4 3 1 #" "
0 0 14 3 1 #"j"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 3 #"))]"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 22 3 1 #"["
0 0 14 3 2 #"p1"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 23 #"get-position-from-index"
0 0 4 3 1 #" "
0 0 14 3 1 #"i"
0 0 4 3 1 #" "
0 0 14 3 1 #"j"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 31 #"                               "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 23 #"get-position-from-index"
0 0 4 3 1 #" "
0 0 14 3 1 #"i"
0 0 4 3 1 #" "
0 0 14 3 1 #"j"
0 0 22 3 5 #")))])"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 22 3 1 #"("
0 0 15 3 5 #"begin"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 1 #"l"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 4 3 1 #" "
0 0 14 3 2 #"x1"
0 0 4 3 1 #" "
0 0 14 3 2 #"x2"
0 0 4 3 1 #" "
0 0 14 3 2 #"x3"
0 0 4 3 1 #" "
0 0 14 3 2 #"x4"
0 0 4 3 1 #" "
0 0 14 3 2 #"x5"
0 0 4 3 1 #" "
0 0 14 3 2 #"x6"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 4 #"set!"
0 0 4 3 1 #" "
0 0 14 3 1 #"l"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"map"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 2 #"\316\273"
0 0 22 3 1 #"("
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"and"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"<="
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #">="
0 0 4 3 1 #" "
0 0 20 3 2 #"16"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 42 #"                                          "
0 0 22 3 1 #"("
0 0 14 3 2 #"<="
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #">="
0 0 4 3 1 #" "
0 0 20 3 2 #"16"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 42 #"                                          "
0 0 22 3 1 #"("
0 0 14 3 3 #"not"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 7 #"invalid"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"send"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"send"
0 0 4 3 1 #" "
0 0 14 3 9 #"cur-board"
0 0 4 3 1 #" "
0 0 14 3 7 #"get-elm"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 14 3 9 #"get-state"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 37 #"                                     "
0 0 14 3 1 #"x"
0 0 4 29 1 #"\n"
0 0 4 3 37 #"                                     "
0 0 20 3 2 #"#f"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 5 #"foldr"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 22 3 1 #"("
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 14 3 3 #"res"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 23 #"                       "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 22 3 1 #"("
0 0 14 3 3 #"not"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"void"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 26 #"                          "
0 0 22 3 2 #"(("
0 0 14 3 9 #"draw-line"
0 0 4 3 1 #" "
0 0 14 3 9 #"view-port"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 2 #"p1"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 23 #"get-position-from-index"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 63
#"                                                               "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 23 #"get-position-from-index"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 4 #"))))"
0 0 4 3 1 #" "
0 0 19 3 11 #"\"indianred\""
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 21 #"                     "
0 0 22 3 1 #"("
0 0 14 3 4 #"void"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 21 #"                     "
0 0 14 3 1 #"l"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 4 #"void"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 22 3 2 #"[("
0 0 14 3 3 #"and"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"="
0 0 4 3 1 #" "
0 0 14 3 1 #"i"
0 0 4 3 1 #" "
0 0 20 3 2 #"16"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"="
0 0 4 3 1 #" "
0 0 14 3 1 #"j"
0 0 4 3 1 #" "
0 0 20 3 2 #"16"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"void"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 22 3 2 #"[("
0 0 14 3 1 #"="
0 0 4 3 1 #" "
0 0 14 3 1 #"j"
0 0 4 3 1 #" "
0 0 20 3 2 #"16"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"helper"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 14 3 1 #"i"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"helper"
0 0 4 3 1 #" "
0 0 14 3 1 #"i"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 14 3 1 #"j"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 6 #"))])))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 6 #"helper"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 17 #"connect-all-holes"
0 0 22 3 1 #")"
0 0 4 3 7 #"       "
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 14 #"draw-all-holes"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 14 #"draw-all-balls"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"get-ball"
0 0 4 3 1 #" "
0 0 14 3 4 #"hole"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 17 3 58
#";;;this function returns which ball is present in the hole"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"get-ball1"
0 0 4 3 1 #" "
0 0 14 3 3 #"vec"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"helper"
0 0 4 3 1 #" "
0 0 14 3 1 #"i"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 4 3 1 #" "
0 0 22 3 2 #"[("
0 0 14 3 1 #"="
0 0 4 3 1 #" "
0 0 14 3 1 #"i"
0 0 4 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 22 3 2 #"[("
0 0 14 3 6 #"equal?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"vector-ref"
0 0 4 3 1 #" "
0 0 14 3 3 #"vec"
0 0 4 3 1 #" "
0 0 14 3 1 #"i"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"helper"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 14 3 1 #"i"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 3 #"))]"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"vector-ref"
0 0 4 3 1 #" "
0 0 14 3 3 #"vec"
0 0 4 3 1 #" "
0 0 14 3 1 #"i"
0 0 22 3 4 #")]))"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 6 #"helper"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 2 #"st"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"send"
0 0 4 3 1 #" "
0 0 14 3 4 #"hole"
0 0 4 3 1 #" "
0 0 14 3 9 #"get-state"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 4 3 1 #" "
0 0 22 3 2 #"[("
0 0 14 3 2 #"or"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"null"
0 0 4 3 1 #" "
0 0 14 3 2 #"st"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 7 #"invalid"
0 0 4 3 1 #" "
0 0 14 3 2 #"st"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 7 #"no-ball"
0 0 22 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 4 #"let*"
0 0 4 3 1 #" "
0 0 22 3 2 #"(["
0 0 14 3 1 #"i"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"color->index"
0 0 4 3 1 #" "
0 0 14 3 2 #"st"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 21 #"                     "
0 0 22 3 1 #"["
0 0 14 3 8 #"ball-set"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"vector-ref"
0 0 4 3 1 #" "
0 0 14 3 9 #"all-balls"
0 0 4 3 1 #" "
0 0 14 3 1 #"i"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 21 #"                     "
0 0 22 3 1 #"["
0 0 14 3 5 #"balls"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"send"
0 0 4 3 1 #" "
0 0 14 3 8 #"ball-set"
0 0 4 3 1 #" "
0 0 14 3 13 #"get-all-balls"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 21 #"                     "
0 0 22 3 1 #"["
0 0 14 3 3 #"ind"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"send"
0 0 4 3 1 #" "
0 0 14 3 4 #"hole"
0 0 4 3 1 #" "
0 0 14 3 9 #"get-index"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 21 #"                     "
0 0 22 3 1 #"["
0 0 14 3 7 #"new-vec"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"vector-filter"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 4 3 1 #" "
0 0 14 3 3 #"ind"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"send"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 14 3 9 #"get-index"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 14 3 5 #"balls"
0 0 22 3 3 #")])"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 22 3 1 #"("
0 0 14 3 9 #"get-ball1"
0 0 4 3 1 #" "
0 0 14 3 7 #"new-vec"
0 0 22 3 5 #"))]))"
0 0 4 29 1 #"\n"
0 0 17 3 47 #";(define mouse-clk (get-mouse-click view-port))"
0 0 4 29 1 #"\n"
0 0 17 3 44 #";(define mouse (mouse-click-posn mouse-clk))"
0 0 4 29 1 #"\n"
0 0 17 3 60
#";(set! mouse (mouse-click-posn (get-mouse-click view-port)))"
0 0 4 29 1 #"\n"
0 0 17 3 37 #";(cons (posn-x mouse) (posn-y mouse))"
0 0 4 29 1 #"\n"
0 0 17 3 1 #";"
0 0 4 29 1 #"\n"
0 0 17 3 17 #";(send (find-ball"
0 0 4 29 1 #"\n"
0 0 17 3 51 #";       (posn-x mouse) (posn-y mouse)) get-index)  "
0 0 4 29 1 #"\n"
0 0 17 3 2 #"; "
0 0 4 29 1 #"\n"
0 0 17 3 1 #";"
0 0 4 29 1 #"\n"
0 0 17 3 1 #";"
0 0 4 29 1 #"\n"
0 0 17 3 1 #";"
0 0 4 29 1 #"\n"
0 0 17 3 60
#";(set! mouse (mouse-click-posn (get-mouse-click view-port)))"
0 0 4 29 1 #"\n"
0 0 17 3 59
#";(send (find-ball (posn-x mouse) (posn-y mouse)) get-index)"
0 0 4 29 1 #"\n"
0 0 17 3 1 #";"
0 0 4 29 1 #"\n"
0 0 17 3 8 #";       "
0 0 4 29 1 #"\n"
0 0 17 3 60
#";(set! mouse (mouse-click-posn (get-mouse-click view-port)))"
0 0 4 29 1 #"\n"
0 0 17 3 59
#";(send (find-ball (posn-x mouse) (posn-y mouse)) get-index)"
0 0 4 29 1 #"\n"
0 0 17 3 60
#";(set! mouse (mouse-click-posn (get-mouse-click view-port)))"
0 0 4 29 1 #"\n"
0 0 17 3 17 #";(send (find-ball"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 6 #"posn-x"
0 0 17 3 1 #" "
0 0 17 3 5 #"mouse"
0 0 17 3 1 #")"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 6 #"posn-y"
0 0 17 3 1 #" "
0 0 17 3 5 #"mouse"
0 0 17 3 2 #"))"
0 0 17 3 1 #" "
0 0 17 3 10 #"get-index)"
0 0 4 29 1 #"\n"
0 0 17 3 60
#";(set! mouse (mouse-click-posn (get-mouse-click view-port)))"
0 0 4 29 1 #"\n"
0 0 17 3 59
#";(send (find-ball (posn-x mouse) (posn-y mouse)) get-index)"
0 0 4 29 1 #"\n"
0 0 17 3 60
#";(set! mouse (mouse-click-posn (get-mouse-click view-port)))"
0 0 4 29 1 #"\n"
0 0 17 3 59
#";(send (find-ball (posn-x mouse) (posn-y mouse)) get-index)"
0 0 4 29 1 #"\n"
0 0 17 3 60
#";(set! mouse (mouse-click-posn (get-mouse-click view-port)))"
0 0 4 29 1 #"\n"
0 0 17 3 59
#";(send (find-ball (posn-x mouse) (posn-y mouse)) get-index)"
0 0 4 29 1 #"\n"
0 0 17 3 60
#";(set! mouse (mouse-click-posn (get-mouse-click view-port)))"
0 0 4 29 1 #"\n"
0 0 17 3 59
#";(send (find-ball (posn-x mouse) (posn-y mouse)) get-index)"
0 0 4 29 1 #"\n"
0 0 17 3 1 #";"
0 0 4 29 1 #"\n"
0 0 17 3 1 #";"
0 0 4 29 1 #"\n"
0 0 17 3 17 #";(define (loop i)"
0 0 4 29 1 #"\n"
0 0 17 3 22 #"; (if (= i 20) (void) "
0 0 4 29 1 #"\n"
0 0 17 3 12 #";     (begin"
0 0 4 29 1 #"\n"
0 0 17 3 67
#";       (set! mouse (mouse-click-posn (get-mouse-click view-port)))"
0 0 4 29 1 #"\n"
0 0 17 3 75
(
 #";       (display(send (find-ball (posn-x mouse) (posn-y mouse)) get-"
 #"index))"
) 0 0 4 29 1 #"\n"
0 0 17 3 25 #";       (loop (+ i 1)))))"
0 0 4 29 1 #"\n"
0 0 17 3 1 #";"
0 0 4 29 1 #"\n"
0 0 17 3 9 #";(loop 0)"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 9 #"clk-state"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"clicking"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 5 #"begin"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 4 #"let*"
0 0 4 3 1 #" "
0 0 22 3 2 #"(["
0 0 14 3 9 #"mouse-clk"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"get-mouse-click"
0 0 4 3 1 #" "
0 0 14 3 9 #"view-port"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 22 3 1 #"["
0 0 14 3 5 #"mouse"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 16 #"mouse-click-posn"
0 0 4 3 1 #" "
0 0 14 3 9 #"mouse-clk"
0 0 22 3 3 #")])"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(["
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"find-ball"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"posn-x"
0 0 4 3 1 #" "
0 0 14 3 5 #"mouse"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"posn-y"
0 0 4 3 1 #" "
0 0 14 3 5 #"mouse"
0 0 22 3 4 #"))])"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 4 3 1 #" "
0 0 22 3 2 #"[("
0 0 14 3 3 #"not"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"clicking"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 17 3 108
(
 #";[(right-mouse-click? mouse-clk) (right-mouse x)]   ;;;left mouse cl"
 #"ick implies the jump is not complete yet"
) 0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 22 3 2 #"[("
0 0 14 3 6 #"equal?"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"null"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"send"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 14 3 9 #"get-state"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"clicking"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 22 3 2 #"[("
0 0 14 3 17 #"left-mouse-click?"
0 0 4 3 1 #" "
0 0 14 3 9 #"mouse-clk"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"left-mouse"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 2 #")]"
0 0 4 3 1 #" "
0 0 17 3 2 #";;"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"show"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 5 #"begin"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"left-mouse"
0 0 4 3 1 #" "
0 0 14 3 4 #"hole"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"let*"
0 0 4 3 1 #" "
0 0 22 3 2 #"(["
0 0 14 3 9 #"mouse-clk"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"get-mouse-click"
0 0 4 3 1 #" "
0 0 14 3 9 #"view-port"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"["
0 0 14 3 5 #"mouse"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 16 #"mouse-click-posn"
0 0 4 3 1 #" "
0 0 14 3 9 #"mouse-clk"
0 0 22 3 3 #")])"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(["
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"find-ball"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"posn-x"
0 0 4 3 1 #" "
0 0 14 3 5 #"mouse"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"posn-y"
0 0 4 3 1 #" "
0 0 14 3 5 #"mouse"
0 0 22 3 4 #"))])"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 4 3 1 #" "
0 0 22 3 2 #"[("
0 0 14 3 3 #"not"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"left-mouse"
0 0 4 3 1 #" "
0 0 14 3 4 #"hole"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 2 #"[("
0 0 14 3 2 #"or"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 18 #"right-mouse-click?"
0 0 4 3 1 #" "
0 0 14 3 9 #"mouse-clk"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"not"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"send"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 14 3 9 #"get-state"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"null"
0 0 22 3 3 #")))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"clicking"
0 0 22 3 2 #")]"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 17 3 53 #";[(left-mouse-click? mouse-clk) (right-mouse hole x)]"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 2 #"[("
0 0 14 3 17 #"left-mouse-click?"
0 0 4 3 1 #" "
0 0 14 3 9 #"mouse-clk"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"send"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 14 3 9 #"get-state"
0 0 22 3 1 #")"
0 0 20 3 1 #"'"
0 0 14 3 4 #"null"
0 0 22 3 1 #")"
0 0 17 3 29 #";;;remember to put an if here"
0 0 4 29 1 #"\n"
0 0 4 3 45 #"                                             "
0 0 17 3 43 #";for the if the hole doesnot contain a ball"
0 0 4 29 1 #"\n"
0 0 4 3 46 #"                                              "
0 0 22 3 1 #"("
0 0 15 3 4 #"let*"
0 0 4 3 1 #" "
0 0 22 3 2 #"(["
0 0 14 3 4 #"ball"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"get-ball"
0 0 4 3 1 #" "
0 0 14 3 4 #"hole"
0 0 22 3 3 #")])"
0 0 4 29 1 #"\n"
0 0 4 3 50 #"                                                  "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 14 3 4 #"ball"
0 0 4 29 1 #"\n"
0 0 4 3 54 #"                                                      "
0 0 22 3 1 #"("
0 0 15 3 4 #"let*"
0 0 4 3 1 #" "
0 0 22 3 2 #"(["
0 0 14 3 5 #"moves"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"send"
0 0 4 3 1 #" "
0 0 14 3 4 #"ball"
0 0 4 3 1 #" "
0 0 14 3 18 #"get-possible-index"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 61
#"                                                             "
0 0 22 3 1 #"["
0 0 14 3 1 #"s"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"my-assq"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"send"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 14 3 9 #"get-index"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"moves"
0 0 22 3 3 #")])"
0 0 4 29 1 #"\n"
0 0 4 3 47 #"                                               "
0 0 22 3 1 #"("
0 0 15 3 5 #"begin"
0 0 4 29 1 #"\n"
0 0 4 3 49 #"                                                 "
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 4 3 1 #" "
0 0 14 3 5 #"moves"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 49 #"                                                 "
0 0 22 3 1 #"("
0 0 14 3 7 #"newline"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 49 #"                                                 "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"not"
0 0 4 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"clicking"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 52 #"                                                    "
0 0 22 3 1 #"("
0 0 15 3 5 #"begin"
0 0 4 29 1 #"\n"
0 0 4 3 54 #"                                                      "
0 0 22 3 1 #"("
0 0 14 3 4 #"send"
0 0 4 3 1 #" "
0 0 14 3 4 #"ball"
0 0 4 3 1 #" "
0 0 14 3 10 #"index-set!"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"send"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 14 3 9 #"get-index"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 54 #"                                                      "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(["
0 0 14 3 3 #"col"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"send"
0 0 4 3 1 #" "
0 0 14 3 4 #"ball"
0 0 4 3 1 #" "
0 0 14 3 9 #"get-color"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 60
#"                                                            "
0 0 22 3 1 #"["
0 0 14 3 5 #"posin"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"change-a-bit"
0 0 22 3 1 #"("
0 0 14 3 4 #"send"
0 0 4 3 1 #" "
0 0 14 3 4 #"hole"
0 0 4 3 1 #" "
0 0 14 3 12 #"get-position"
0 0 22 3 3 #"))]"
0 0 4 29 1 #"\n"
0 0 4 3 60
#"                                                            "
0 0 22 3 1 #"["
0 0 14 3 6 #"posfin"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"change-a-bit"
0 0 22 3 1 #"("
0 0 14 3 4 #"send"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 14 3 12 #"get-position"
0 0 22 3 4 #"))])"
0 0 4 29 1 #"\n"
0 0 4 3 56 #"                                                        "
0 0 22 3 1 #"("
0 0 15 3 5 #"begin"
0 0 4 29 1 #"\n"
0 0 4 3 58 #"                                                          "
0 0 22 3 2 #"(("
0 0 14 3 11 #"draw-pixmap"
0 0 4 3 1 #" "
0 0 14 3 9 #"view-port"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 19 3 10 #"\"hole.png\""
0 0 4 3 1 #" "
0 0 14 3 5 #"posin"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 58 #"                                                          "
0 0 22 3 2 #"(("
0 0 14 3 11 #"draw-pixmap"
0 0 4 3 1 #" "
0 0 14 3 9 #"view-port"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"string-append"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"symbol->string"
0 0 4 3 1 #" "
0 0 14 3 3 #"col"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 19 3 6 #"\".png\""
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 6 #"posfin"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 54 #"                                                      "
0 0 22 3 1 #"("
0 0 14 3 8 #"clicking"
0 0 22 3 6 #")))))("
0 0 14 3 8 #"clicking"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 46 #"                                              "
0 0 22 3 1 #"("
0 0 14 3 8 #"clicking"
0 0 22 3 7 #"))]))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 29 #";(define (change-pos-a-bit i)"
0 0 4 29 1 #"\n"
0 0 17 3 31 #";  (make-posn (car i) (cdr i)))"
0 0 4 29 1 #"\n"
0 0 17 3 1 #";"
0 0 4 29 1 #"\n"
0 0 17 3 29 #";(define (right-mouse hole x)"
0 0 4 29 1 #"\n"
0 0 17 3 32 #";  (let* ([ball (get-ball hole)]"
0 0 4 29 1 #"\n"
0 0 17 3 48 #";         [moves (send ball get-possible-index)]"
0 0 4 29 1 #"\n"
0 0 17 3 49 #";         [s (my-assq (send x get-index) moves)])"
0 0 4 29 1 #"\n"
0 0 17 3 34 #";    (if (not s) (left-mouse hole)"
0 0 4 29 1 #"\n"
0 0 17 3 15 #";        (begin"
0 0 4 29 1 #"\n"
0 0 17 3 52 #";          (send ball index-set! (send x get-index))"
0 0 4 29 1 #"\n"
0 0 17 3 44 #";          (let ([col (send ball get-color)]"
0 0 4 29 1 #"\n"
0 0 17 3 63
#";                [posin (change-a-bit(send hole get-position))]"
0 0 4 29 1 #"\n"
0 0 17 3 62
#";                [posfin (change-a-bit(send x get-position))])"
0 0 4 29 1 #"\n"
0 0 17 3 19 #";            (begin"
0 0 4 29 1 #"\n"
0 0 17 3 57
#";              ((draw-pixmap view-port) \"hole.png\" posin)"
0 0 4 29 1 #"\n"
0 0 17 3 93
(
 #";              ((draw-pixmap view-port) (string-append (symbol->stri"
 #"ng col) \".png\") posfin)))"
) 0 0 4 29 1 #"\n"
0 0 17 3 25 #";          (clicking)))))"
0 0 4 29 1 #"\n"
0 0 17 3 1 #";"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 8 #"clicking"
0 0 22 3 1 #")"
0 0 4 3 11 #"           "
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0           0
